{"version":3,"sources":["../../../src/rpc/handlers/query-app-metadata.js"],"names":["request","proxy","wrapper","from","dataId","params","getEntry","metadataRegistry","appMetadata","pipe","metadataObject"],"mappings":";;;;;;;AAAA;;AAEe,kBAAUA,OAAV,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AAChD,QAAM,CACJC,IADI,EAEJC,MAFI,IAGFJ,OAAO,CAACK,MAHZ,CADgD,CAKhD;;AACA,QAAMC,QAAQ,GAAGC,gBAAgB,IAC/BA,gBAAgB,WAAIJ,IAAJ,cAAYC,MAAZ,EADlB;;AAIA,SAAOF,OAAO,CAACM,WAAR,CAAoBC,IAApB,EACL;AACA,sBAAIC,cAAc,IAAIJ,QAAQ,CAACI,cAAD,CAA9B,CAFK,CAAP;AAID","sourcesContent":["import { map } from 'rxjs/operators'\n\nexport default function (request, proxy, wrapper) {\n  const [\n    from,\n    dataId\n  ] = request.params\n  // filter out data items not meant to be viewable by the caller\n  const getEntry = metadataRegistry => (\n    metadataRegistry[`${from},${dataId}`]\n  )\n\n  return wrapper.appMetadata.pipe(\n    // emit observable that contains data queried\n    map(metadataObject => getEntry(metadataObject))\n  )\n}\n"],"file":"query-app-metadata.js"}