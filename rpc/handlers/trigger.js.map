{"version":3,"sources":["../../../src/rpc/handlers/trigger.js"],"names":["trigger","request","proxy","wrapper","eventName","returnValues","params","triggerAppStore","address","Promise","resolve","triggerSubscribe","pipe","appEvent","origin","frontendEvent"],"mappings":";;;;;;;;AAAA;;AACO,SAASA,OAAT,CAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCC,OAAlC,EAA2C;AAChD,QAAM,CACJC,SADI,EAEJC,YAFI,IAGFJ,OAAO,CAACK,MAHZ;AAKAH,EAAAA,OAAO,CAACI,eAAR,CACEL,KAAK,CAACM,OADR,EAEEJ,SAFF,EAGEC,YAHF;AAKA,SAAOI,OAAO,CAACC,OAAR,EAAP;AACD;;AAEM,SAASC,gBAAT,CAA2BV,OAA3B,EAAoCC,KAApC,EAA2CC,OAA3C,EAAoD;AACzD,SAAOA,OAAO,CAACH,OAAR,CAAgBY,IAAhB,CACL,uBAAOC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoBZ,KAAK,CAACM,OAA7C,CADK,EAEL,oBAAIK,QAAQ,IAAIA,QAAQ,CAACE,aAAzB,CAFK,CAAP;AAID","sourcesContent":["import { map, filter } from 'rxjs/operators'\nexport function trigger (request, proxy, wrapper) {\n  const [\n    eventName,\n    returnValues\n  ] = request.params\n\n  wrapper.triggerAppStore(\n    proxy.address,\n    eventName,\n    returnValues\n  )\n  return Promise.resolve()\n}\n\nexport function triggerSubscribe (request, proxy, wrapper) {\n  return wrapper.trigger.pipe(\n    filter(appEvent => appEvent.origin === proxy.address),\n    map(appEvent => appEvent.frontendEvent)\n  )\n}\n"],"file":"trigger.js"}