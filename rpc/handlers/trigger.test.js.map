{"version":3,"sources":["../../../src/rpc/handlers/trigger.test.js"],"names":["t","plan","mockProxy","address","triggerEventObservable","origin","frontendEvent","event","returnValues","testVal","mockWrapper","trigger","subscribe","value","deepEqual"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,kBAAK,0DAAL,EAAiE,MAAMA,CAAN,IAAW;AAC1EA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AACA,QAAMC,SAAS,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAlB;AACA,QAAMC,sBAAsB,GAAG,gBAAK,CAClC;AACEC,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,aADM;AAEbC,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE;AADG;AAFD;AAFjB,GADkC,EAUlC;AACEJ,IAAAA,MAAM,EAAEH,SAAS,CAACC,OADpB;AAEEG,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,aADM;AAEbC,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE;AADG;AAFD;AAFjB,GAVkC,CAAL,CAA/B;AAqBA,QAAMC,WAAW,GAAG;AAAEC,IAAAA,OAAO,EAAEP;AAAX,GAApB;AACA,iCAAiB,IAAjB,EAAuBF,SAAvB,EAAkCQ,WAAlC,EAA+CE,SAA/C,CAAyDC,KAAK,IAAI;AAChEb,IAAAA,CAAC,CAACc,SAAF,CAAYD,KAAZ,EAAmB;AACjBN,MAAAA,KAAK,EAAE,aADU;AAEjBC,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE;AADG;AAFG,KAAnB;AAMD,GAPD;AAQD,CAjCD","sourcesContent":["import test from 'ava'\nimport { triggerSubscribe } from './trigger'\nimport { from } from 'rxjs'\n\ntest('should receive and filter through correct trigger events', async t => {\n  t.plan(1)\n  const mockProxy = { address: '0xdeaddead' }\n  const triggerEventObservable = from([\n    {\n      origin: '0x0',\n      frontendEvent: {\n        event: 'TriggerTest',\n        returnValues: {\n          testVal: 1\n        }\n      }\n    },\n    {\n      origin: mockProxy.address,\n      frontendEvent: {\n        event: 'TriggerTest',\n        returnValues: {\n          testVal: 1\n        }\n      }\n    }\n  ])\n\n  const mockWrapper = { trigger: triggerEventObservable }\n  triggerSubscribe(null, mockProxy, mockWrapper).subscribe(value => {\n    t.deepEqual(value, {\n      event: 'TriggerTest',\n      returnValues: {\n        testVal: 1\n      }\n    })\n  })\n})\n"],"file":"trigger.test.js"}